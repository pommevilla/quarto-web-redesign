---
title: "I'm like, hey, what's up, Quarto?"
---

## Introduction

Quarto is an [open-source](https://github.com/quarto-dev/quarto-cli) scientific and technical publishing system built on [Pandoc](https://pandoc.org). Quarto documents are authored using [markdown](https://en.wikipedia.org/wiki/Markdown), an easy to write plain text format.

In addition to the core capabilities of Pandoc, Quarto includes:

1.  Support for embedding output from Python, R, and Julia via integration with [Jupyter](https://jupyter.org/) and [Knitr](https://yihui.org/knitr/) .

2.  A variety of extensions to Pandoc markdown useful for technical writing including callouts (admonitions), cross-references, sub-figures, layout panels, hover-able citations and footnotes, and more.

3.  A project system for rendering groups of documents at once, sharing options across documents, and producing aggregate output like [books](docs/books/book-basics.md) and [websites](docs/websites/website-basics.md).

4.  HTML output based on [Bootstrap](https://getbootstrap.com/) (including support for [Bootswatch](https://bootswatch.com/) themes).

5.  Automatic installation of required LaTeX packages when rendering PDF output.

The overall design of Quarto is influenced heavily by [R Markdown](https://rmarkdown.rstudio.com/), however unlike R Markdown the architecture is language agnostic. In its current iteration, Quarto can render plain markdown, Jupyter Notebooks, and Knitr (Rmd) documents.

# Hello Quarto

Quarto works with different languages. For example, here are two example Quarto documents named `r_example.qmd` and `python_example.qmd`:

::: {.panel-tabset}
## R

`r_example.qmd`

````{.r}
---
title: "Example R"
---

This is a Quarto document containing R code.

```{.r}
plot(1:10)
```

````

## Python

`python_example.qmd`

````{.python}
---
title: "Example Python Document"
---

This is a Quarto document containing Python code.

```{.python}
import matplotlib.pyplot as plt
import numpy as np

t = [x for x in range(1, 11)]

fig, ax = plt.subplots()
ax.plot(t, t);

plt.show()
```
````
:::

Note that we use the file extension `.qmd` to indicate that this isnâ€™t a plain Markdown file but rather one with embedded computations to be run by Quarto.

We can render these documents by using `quarto render`:

:::{.panel-tabset}
## R

```{.bash}
quarto render example_r.qmd
```

## Python

```{.bash}
quarto render example_python.qmd
```
:::

Quarto will run the code blocks in each document and render their output to `html` documents: 

::: {.panel-tabset}
## R

`example_r.html`

<iframe width="600" height="600" style="border: 1px solid black" src="r_example.html"></iframe>

## Python

`example_python.html`

<iframe width="600" height="600" style="border: 1px solid black" src="python_example.html"></iframe>
:::

::: {.callout-note}
While Quarto renders documents to `html` files by default, Quarto can render to a huge variety of output formats. See [here](https://quarto.org/docs/output-formats/more-formats.html?q=format#formats) for more information.
:::

::: {.callout-note}
While these example demonstrate rendering a `.qmd` Markdown file, Quarto is also compatible with other computational markdown formats like Jupyter Notebooks (`.ipynb`) and R Markdown (`.Rmd`).
:::

# Multiple Languages, One Command

We've seen how Quarto can render documents written in different languages with the same command. We can also use that same command to render a document that contains multiple languages. For example, `example_r_python.qmd` contains both Python and R code:

`example_r_python.qmd`
````{.r}
---
title: "Example R + Python"
---

This is a Quarto document containing both R and Python code.

Here is some R code:

```{.r}
plot(1:10)
```

And here is some Python code:

```{.python}
import matplotlib.pyplot as plt
import numpy as np

t = [x for x in range(1, 11)]

fig, ax = plt.subplots()
ax.plot(t, t);

plt.show()
```

````

And just like before, we can render this document with `quarto render`:

```{.bash}
quarto render example_r_python.qmd
```

The resulting document:

<iframe width="600" height="600" style="border: 1px solid black" src="example_r_python.html"></iframe>

## Ready to get started?

Up next is [Installation](installation.qmd) - we'll install Quarto and additional computational dependencies to get you up and running with Quarto.